apiVersion: v1
kind: ConfigMap
metadata:
  name: database-service-config
data:
  DB_HOST: "postgres"
  DB_PORT: "5432"
  DB_DATABASE: "emergency_response_map"
  MIGRATIONS_TABLE: "migrations"
  RUN_SEEDS_IN_PRODUCTION: "false"
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: database-service
spec:
  replicas: 1
  selector:
    matchLabels:
      app: database-service
  template:
    metadata:
      labels:
        app: database-service
    spec:
      containers:
        - name: database-service
          image: emergency-response-map/database-service:latest
          imagePullPolicy: Never
          ports:
            - containerPort: 3010
          env:
            - name: PORT
              value: "3010"
            - name: NODE_ENV
              value: "dev"
            - name: DB_PORT
              valueFrom:
                configMapKeyRef:
                  name: database-service-config
                  key: DB_PORT
            - name: DB_HOST
              valueFrom:
                configMapKeyRef:
                  name: database-service-config
                  key: DB_HOST
            - name: DB_DATABASE
              valueFrom:
                configMapKeyRef:
                  name: database-service-config
                  key: DB_DATABASE
            - name: DB_USER
              valueFrom:
                secretKeyRef:
                  name: postgres-secrets
                  key: username
            - name: DB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: postgres-secrets
                  key: password
            - name: MIGRATIONS_TABLE
              valueFrom:
                configMapKeyRef:
                  name: database-service-config
                  key: MIGRATIONS_TABLE
            - name: RUN_SEEDS_IN_PRODUCTION
              valueFrom:
                configMapKeyRef:
                  name: database-service-config
                  key: RUN_SEEDS_IN_PRODUCTION
          livenessProbe:
            httpGet:
              path: /api/db/health
              port: 3010
            initialDelaySeconds: 30
            periodSeconds: 10
          readinessProbe:
            httpGet:
              path: /api/db/health
              port: 3010
            initialDelaySeconds: 5
            periodSeconds: 5
          resources:
            limits:
              cpu: "1000m"
              memory: "1024Mi"
            requests:
              cpu: "500m"
              memory: "512Mi"
          # DEV_VOLUME_MOUNTS
      # DEV_VOLUMES
---
apiVersion: v1
kind: Service
metadata:
  name: database-service
spec:
  selector:
    app: database-service
  ports:
    - port: 3010
      targetPort: 3010
  type: ClusterIP
